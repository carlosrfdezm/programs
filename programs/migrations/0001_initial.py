# Generated by Django 3.0.4 on 2020-03-23 17:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import programs.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CGC_Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre y apellidos', max_length=120, verbose_name='Nombre y apellidos')),
                ('charge', models.CharField(choices=[('president', 'Presidente'), ('secretary', 'Secretario'), ('member', 'Miembro')], help_text='Cargo', max_length=50, verbose_name='Cargo')),
                ('priority', models.SmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3')], help_text='Prioridad del Cargo')),
                ('fb_contact', models.URLField(help_text='URL del contacto de Facebook')),
                ('tw_contact', models.URLField(help_text='URL del contacto de Twitter')),
                ('in_contact', models.URLField(help_text='URL del contacto de Linkedin')),
                ('gp_contact', models.URLField(help_text='URL del contacto de Google+')),
                ('picture', models.ImageField(help_text='Foto', upload_to=programs.models.cgc_photo_directory_path)),
            ],
            options={
                'verbose_name': 'Miembro de la CGC',
                'verbose_name_plural': 'Miembros de la CGC',
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(help_text='Nombre completo del programa', max_length=150, verbose_name='Nombre completo')),
                ('short_name', models.CharField(help_text='Nombre corto del programa', max_length=40, verbose_name='Nombre Corto')),
                ('description', models.TextField(help_text='Breve descripcion del programa', max_length=200, verbose_name='Descripcion')),
                ('type', models.CharField(choices=[('phd', 'Doctorado'), ('msc', 'Maestría')], max_length=20, verbose_name='Tipo')),
                ('slug', models.SlugField(help_text='Slug para url', max_length=40, unique=True)),
                ('address', models.TextField(help_text='Dirección de la sede del programa', max_length=150)),
                ('phone', models.CharField(help_text='Teléfono de contacto', max_length=20)),
                ('email', models.EmailField(help_text='Email de contacto', max_length=254)),
                ('icon', models.CharField(choices=[('ion-ios-alarm-outline', 'ion-ios-alarm-outline'), ('ion-ios-albums-outline', 'ion-ios-albums-outline'), ('ion-ios-barcode-outline', 'ion-ios-barcode-outline'), ('ion-ios-body-outline', 'ion-ios-body-outline'), ('ion-ios-book-outline', 'ion-ios-book-outline'), ('ion-ios-calculator-outline', 'ion-ios-calculator-outline'), ('ion-ios-cloudy-outline', 'ion-ios-cloudy-outline'), ('ion-ios-medical-outline', 'ion-ios-medical-outline')], help_text='Seleccione una opcion de la lista', max_length=100)),
                ('background', models.ImageField(blank=True, upload_to=programs.models.program_directory_path)),
            ],
            options={
                'verbose_name': 'Programa',
                'verbose_name_plural': 'Programas',
            },
        ),
        migrations.CreateModel(
            name='ProgramFinishRequirements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del requisito', max_length=50)),
                ('description', models.TextField(help_text='Descricpion del requisito', max_length=150)),
                ('program', models.ForeignKey(help_text='Programa correspondiente', on_delete=django.db.models.deletion.CASCADE, to='programs.Program')),
            ],
        ),
        migrations.CreateModel(
            name='ProgramInitRequirements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del requisito', max_length=50)),
                ('description', models.TextField(help_text='Descripcion del requisito', max_length=150)),
                ('program', models.ForeignKey(help_text='Programa correspondiente', on_delete=django.db.models.deletion.CASCADE, to='programs.Program')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateField(default=django.utils.timezone.now)),
                ('graduate_date', models.DateField(null=True)),
                ('country', models.CharField(default='Cuba', max_length=70)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='programs.Program')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentInitRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accomplished', models.BooleanField(default=False, help_text='Verdadero si esta satisfecho, Falso si lo contrario')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='programs.ProgramInitRequirements')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='programs.Student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFinishRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accomplished', models.BooleanField(default=False, help_text='Verdadero si esta satisfecho, Falso si lo contrario')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='programs.ProgramFinishRequirements')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='programs.Student')),
            ],
        ),
        migrations.CreateModel(
            name='ProgramMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('Coordinador', 'Presidente'), ('Secretario', 'Vicepresidente'), ('Miembro', 'Miembro')], max_length=50)),
                ('institution', models.CharField(max_length=100)),
                ('degree', models.TextField(help_text='Grado cientifico', max_length=300)),
                ('picture', models.ImageField(null=True, upload_to=programs.models.member_directory_path)),
                ('fb_contact', models.CharField(blank=True, help_text='Contacto de Facebook del miembro del tribunal', max_length=50, null=True)),
                ('tw_contact', models.CharField(blank=True, help_text='Contacto de Twitter del miembro del tribunal', max_length=50, null=True)),
                ('ln_contact', models.CharField(blank=True, help_text='Contacto de Linkedin del miembro del tribunal', max_length=50, null=True)),
                ('init_date', models.DateField(default=django.utils.timezone.now)),
                ('sex', models.CharField(choices=[('m', 'Masculino'), ('f', 'Femenino')], help_text='Sexo del miembro del tribunal', max_length=2)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='programs.Program')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PhdStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('solicitante', 'Solicitante'), ('doctorando', 'Doctorando'), ('graduado', 'Graduado')], max_length=15)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='programs.Student')),
            ],
        ),
    ]
